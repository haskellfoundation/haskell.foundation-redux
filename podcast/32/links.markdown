* [Ranjit’s Webpage](https://ranjitjhala.github.io/)
* [Ranjit’s Twitter](https://twitter.com/RanjitJhala)
* [BLAST model checker](https://en.wikipedia.org/wiki/BLAST_model_checker)
* [dsolve liquid types for OCaml](https://github.com/ucsd-progsys/dsolve)
* [Greg Nelson, Techniques for Program Verification](https://people.eecs.berkeley.edu/~necula/Papers/nelson-thesis.pdf)
* [SAT solvers](https://en.wikipedia.org/wiki/SAT_solver)
* [Dafny](https://dafny.org/)
* [F*](https://fstar-lang.org/)
* [Patrick Rondon](https://patrickrondon.com/)
* [Niki Vazou](https://nikivazou.github.io/)
* [Liquid Haskell](https://ucsd-progsys.github.io/liquidhaskell/)
* [Abstract Refinement Types, ESOP 2013](https://ranjitjhala.github.io/static/abstract_refinement_types.pdf)
* [brick package](https://hackage.haskell.org/package/brick)
* [Eric Seidel](https://eric.seidel.io/)
* [Nico Lehmann et al., STORM: Refinement Types for Secure Web Applications, OSDI 2021](https://ranjitjhala.github.io/static/storm-osdi21.pdf)
* [flux](https://github.com/flux-rs/flux)

